@namespace Carlton.Core.Components.Lab
@attribute [ObserveStateEvents("MenuItemSelected")]
@inherits BaseConnectedComponent<NavMenuViewModel>


<AccordionSelectGroup TValue="ComponentState"
                      Groups="ComponentStateGroups"
                      SelectedItem="ViewModel.SelectedItem"
                      OnSelectedItemChanged="args => base.OnComponentEvent.InvokeAsync(new SelectMenuItemCommand(this, args.Item))" />


@code{
    private IEnumerable<SelectGroup<ComponentState>> ComponentStateGroups { get; set; }

    protected override void OnParametersSet()
    {
        ParseComponentStatesIntoAccordionGroups();
        base.OnParametersSet();
    }

    private void ParseComponentStatesIntoAccordionGroups()
    {
        var resultGroups = new List<SelectGroup<ComponentState>>();

        var groups = ViewModel.MenuItems.GroupBy(_ => _.Type);

        var groupIndex = 0;
        foreach(var group in groups)
        {
            var selectItems = group.WithIndex().Select(_ => new SelectItem<ComponentState>(_.item.DisplayName, _.index, _.item));
            resultGroups.Add(new SelectGroup<ComponentState>(group.Key.GetDisplayName(), groupIndex, selectItems));
            groupIndex++;
        }

        ComponentStateGroups = resultGroups;
    }
}