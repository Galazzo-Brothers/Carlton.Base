@using Carlton.Core.Components.DropdownMenu
@using Carlton.Core.Components.Layouts
@using Carlton.Core.Components.Layouts.State.Theme
@using Carlton.Core.Layouts.Components.Notifications
@* @using Carlton.Core.Components.Layouts.Notifications *@
@namespace Carlton.Core.Lab.Layouts
@inject IThemeState ThemeState
@inject NavigationManager NavigationManager

<div class="component-lab-header-actions">
    <ThemeMenu />
    <NotificationMenu />
    <ProfileAvatar Username="Stephen"
                   AvatarImgUrl="_content/Carlton.Core.Components/images/avatar.jpg"
                   DropdownMenuItems="DropdownMenuItems"
                   MenuItemSelected="HandleMenuItemSelected" />
</div>


@code {
    // [CascadingParameter]
    // private ThemeState ThemeState { get; set; }

    private IEnumerable<DropdownMenuItem<int>> DropdownMenuItems
    {
        get
        {
            return new List<DropdownMenuItem<int>>
            {
                new DropdownMenuItem<int>("Profile", 1, "account", 1),
                new DropdownMenuItem<int>("Theme", 2, "theme-light-dark", 2),
                new DropdownMenuItem<int>("Debug", 3, "bug-outline", 3),
                new DropdownMenuItem<int>("Logout", 4, "logout", 4)
            };
        }
    }


    private void HandleMenuItemSelected(int selectedIndex)
    {
        switch (selectedIndex)
        {
            case 2:
                ThemeState.SetTheme(ThemeState.Theme == Themes.light ? Themes.dark : Themes.light);
                break;
            case 3:
                NavigationManager.NavigateTo($"/debug/logs");
                break;
            default:
                return;
        }
    }
}