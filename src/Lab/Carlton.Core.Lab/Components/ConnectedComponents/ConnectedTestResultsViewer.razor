@using Carlton.Core.Components.Tables
@using Carlton.Core.Utilities.UnitTesting
@namespace Carlton.Core.Components.Lab.Components
@attribute [ObserveStateEvent("MenuItemSelected")]
@inherits BaseConnectedComponent<TestResultsViewModel>

<div class="test-results-viewer">
    <Table Headings="Headings" Items="@ViewModel.TestResults" ShowPaginationRow="true" RowsPerPageOpts="RowsPerPageInts" ZebraStripped="true">
        <RowTemplate Context="item">
            <div class="table-row">
                <div class="table-cell test-outcome-column">
                    @switch (item?.TestResultOutcome)
                    {
                        case TestResultOutcomes.Passed:
                            <div class="test-outcome-icon">
                                <span class="test-passed-icon mdi mdi-18px mdi-check-circle"></span>
                                <span class="test-outcome-text">Passed</span>
                            </div>
                            break;
                        case TestResultOutcomes.Failed:
                            <div class="test-outcome-icon">
                                <span class="test-failed-icon mdi mdi-18px mdi-close-circle"></span>
                                <span class="test-outcome-text">Failed</span>
                            </div>
                            break;
                        case TestResultOutcomes.NotRun:
                            <div class="test-outcome-icon">
                                <span class="test-notrun-icon mdi mdi-18px mdi-help-circle"></span>
                                <span class="test-outcome-text">NotRun</span>
                            </div>
                            break;
                    }
                </div>
                <div class="table-cell">@item?.TestName</div>
            </div>
        </RowTemplate>
    </Table>
</div>


@code {
    private IEnumerable<TableHeadingItem> Headings
    {
        get => new List<TableHeadingItem>
        {
            new TableHeadingItem("Result", "TestResultOutcome"),
            new TableHeadingItem("Test Name", "TestName")
        };
    }

    private IEnumerable<int> RowsPerPageInts = new List<int>
    {
        5, 10, 25
    };
}

