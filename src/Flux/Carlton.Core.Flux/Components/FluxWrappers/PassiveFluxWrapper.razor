@using Microsoft.Extensions.Logging
@using Microsoft.JSInterop
@using System.Diagnostics.Contracts
@namespace Carlton.Core.Flux.Components
@typeparam TState
@typeparam TViewModel
@inherits FluxWrapper<TState, TViewModel>

@*
	Represents a component that wraps another component and provides a passive view model.
	<typeparam name="TState">The type of Flux state.</typeparam>
	<typeparam name="TViewModel">The type of view model.</typeparam>
*@

@if (IsLoading)
{
	<!-- Spinner content -->
    @SpinnerContent
}
else
{
	<!-- Wrapped Flux Component-->
    <DynamicComponent Type="WrappedComponentType" Parameters="GetParameters()" />
}


@code {
	/// <summary>
	/// Gets or sets the passive view model.
	/// </summary>
	[Parameter]
    public TViewModel PassiveViewModel { get; set; }
    
    protected override Task<TViewModel> GetViewModel()
    {
        return Task.FromResult(PassiveViewModel);
    }
}
