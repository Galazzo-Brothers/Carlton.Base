@using Carlton.Core.Flux.Components.ErrorComponents
@namespace Carlton.Core.Flux.Components
@typeparam TState
@typeparam TViewModel
@inject ILogger<PassiveFluxComponent<TState, TViewModel>> Logger

@*
	Represents a component that wraps a PassiveFluxWrapper component within a FluxErrorBoundary.
	This component handles errors and displays a spinner while waiting for asynchronous operations.
*@
<FluxErrorBoundary ErrorPrompt="ErrorPrompt">
    <ChildContent>
        <PassiveFluxWrapper TState="TState" TViewModel="TViewModel" SpinnerContent="SpinnerContent" PassiveViewModel="PassiveViewModel" />
    </ChildContent>
</FluxErrorBoundary>

@code {
	/// <summary>
	/// Gets or sets the content to display as a spinner while waiting for asynchronous operations.
	/// </summary>
	[Parameter]
    public RenderFragment SpinnerContent { get; set; }

	/// <summary>
	/// Gets or sets the content to display in case of an error.
	/// </summary>
	[Parameter]
    public RenderFragment<ErrorPromptModel> ErrorPrompt { get; set; }

	/// <summary>
	/// Gets or sets the passive view model to be used by the component.
	/// </summary>
	[Parameter]
    public TViewModel PassiveViewModel { get; set; }
}




