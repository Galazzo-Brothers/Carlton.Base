@using Carlton.Core.Components.Table;
@namespace Carlton.Core.Flux.Debug.Components.Logging.EventLogging

<div class="log-table">
    <Table Headings="Headings" Items="LogEntries" ShowPaginationRow="true" RowsPerPageOpts="RowsPerPageInts" ZebraStripped="true">
        <RowTemplate Context="item">
            <EventLogTableRow LogEntry="item" LogEntrySelected="OnLogEntrySelected" IsSelected="item==SelectedLogEntry" />
        </RowTemplate>
    </Table>
</div>

@code {
    [Parameter]
    public IEnumerable<LogEntry> LogEntries { get; set; } = new List<LogEntry>();

    [Parameter]
    public EventCallback<LogEntry> LogEntrySelected { get; set; }

    private LogEntry SelectedLogEntry { get; set; }

    private void OnLogEntrySelected(LogEntry selectedLogEntry)
    {
        SelectedLogEntry = selectedLogEntry;
        LogEntrySelected.InvokeAsync(selectedLogEntry);
    }

    private IEnumerable<TableHeadingItem> Headings
    {
        get => new List<TableHeadingItem>
        {
            new TableHeadingItem("Timestamp"),
            new TableHeadingItem("Message"),
            new TableHeadingItem("Log Level", "Log Level"),
            new TableHeadingItem("Event ID", "EventId"),
            new TableHeadingItem("Event Name", "EventName"),
        };
    }

    private IEnumerable<int> RowsPerPageInts = new List<int>
    {
        5, 10, 25
    };
}
