@using Carlton.Core.Components.Tables
@using Carlton.Core.Foundation.State
@using Carlton.Core.Utilities.Extensions;
@using Carlton.Core.Foundation.Web.ViewState
@namespace Carlton.Core.Flux.Debug.Components.Logging.EventLogging.LogTable

@* Component for displaying an event log table in a debug environment. *@
<div class="log-table">
	<ViewStateTable	Headings="Headings"
					Items="LogMessages"
					ShowPaginationRow="true"
					RowsPerPageOpts="RowsPerPageOpts"
					ZebraStripped="true"
					Hoverable="true"
					OnTableInteraction="OnTableInteraction"
					ViewStateKey="@nameof(EventLogTable)">
		<RowTemplate Context="item">
			<EventLogTableRow LogEntry="item"
							  IsSelected="item.Id==SelectedLogMessageIndex"
							  OnLogMessageSelected="OnLogMessageSelected" />
		</RowTemplate>
	</ViewStateTable>
</div>

@code {
	/// <summary>
	/// Gets or sets the list of log messages to display.
	/// </summary>
	[Parameter]
	public List<LogMessageDescriptor> LogMessages { get; set; } = new();

	/// <summary>
	/// Gets or sets the selected log message.
	/// </summary>
	[Parameter]
	public int? SelectedLogMessageIndex { get; set; }

	/// <summary>
	/// Event callback for when a log message is selected.
	/// </summary>
	[Parameter]
	public EventCallback<int> OnLogMessageSelected { get; set; }

	/// <summary>
	/// Event callback for table interaction state.
	/// </summary>
	[Parameter]
	public EventCallback<TableInteractionState> OnTableInteraction { get; set; }

	private IEnumerable<TableHeadingItem> Headings
	{
		get => new List<TableHeadingItem>
		{
			new TableHeadingItem("Timestamp"),
			new TableHeadingItem("Message"),
			new TableHeadingItem("Log Level", "LogLevel"),
			new TableHeadingItem("Event ID", "EventId.Id"),
			new TableHeadingItem("Event Name", "EventId.Name"),
		};
	}

	private List<int> RowsPerPageOpts = new List<int> { 5, 10, 25 };
}
