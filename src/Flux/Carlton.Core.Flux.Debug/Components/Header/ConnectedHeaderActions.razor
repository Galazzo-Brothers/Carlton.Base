@using Carlton.Core.Components
@using Carlton.Core.Components.Dropdowns
@using Carlton.Core.Components.Layouts
@using Carlton.Core.Components.Layouts.Modals
@using Carlton.Core.Components.Layouts.Theme
@using Carlton.Core.Components.Layouts.Toasts
@using Carlton.Core.Components.Modals
@using Carlton.Core.Flux.Debug.Layouts
@namespace Carlton.Core.Flux.Debug.Components
@inherits BaseConnectedComponent<HeaderActionsViewModel>
@inject IThemeState ThemeState
@inject IModalState ModalState
@inject NavigationManager NavigationManager
@inject IToastState ToastState


@* Component for rendering header actions in a debug environment. *@
<FluxDebugHeaderActions 
       UserName="@ViewModel.UserName"
       AvatarUrl="@ViewModel.AvatarUrl"
       DropdownMenuItems="DropdownMenuItems"/>
	   

@code {
    private IEnumerable<DropdownMenuItem<int>> DropdownMenuItems
    {
        get =>
            new List<DropdownMenuItem<int>>
            {
                new DropdownMenuItem<int>("Profile", 1, "account", 1, () => { }),
                new DropdownMenuItem<int>("Theme", 2, "theme-light-dark", 2, ThemeState.ToggleTheme),
                new DropdownMenuItem<int>("Clear Local Storage", 3, "delete", 3, RaiseClearLocalStorageConfirmationModal),
                new DropdownMenuItem<int>("App", 4, "open-in-app", 4, () => NavigationManager.NavigateTo($"/")),
                new DropdownMenuItem<int>("Logout", 5, "logout", 5, () => { })
            };

    }

    private void RaiseClearLocalStorageConfirmationModal()
        => ModalState.RaiseModal(ModalTypes.ConfirmationModal,
            new ModalViewModel
            {
               Prompt = "Are you sure",
               Message = "Are you sure you want to clear the local storage logs?",
               CloseModal = ClearLocalStorageConfirmed,
               DismissModal = null
            });


    private async Task ClearLocalStorageConfirmed(ModalCloseEventArgs args)
    {
        //Check if user confirmed the action
        if (!args.UserConfirmed)
            return;

        //Notify the user via a toast
        ToastState.RaiseToast("Success", "Local Storage has been cleared.", Core.Components.Toasts.ToastTypes.Success);

        //Update the in memory state store to reflect the action
        await base.OnComponentEvent.InvokeAsync(new LogsClearedCommand());
    }
}