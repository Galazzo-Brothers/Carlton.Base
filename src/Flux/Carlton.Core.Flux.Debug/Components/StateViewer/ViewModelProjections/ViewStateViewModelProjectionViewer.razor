@using Carlton.Core.Foundation.Web.ViewState
@namespace Carlton.Core.Flux.Debug.Components.StateViewer.ViewModelProjections
@inherits ViewModelProjectionViewer

@*
    This Razor component is a view state wrapper for the view model projection viewer.
	It facilitates the retention of state of the component across re-renders
*@
<ViewModelProjectionViewer SelectedIndex="ViewStateService.ViewState"
						   State="State"
						   ViewModelTypes="ViewModelTypes"
						   OnViewModelChange="HandleViewModelChange" />


@code {
	[Inject(Key = "ViewModelIndex")]
	private IViewStateService<int> ViewStateService { get; set; }

	protected override void OnInitialized()
	{
		if (ViewStateService.ViewState == null)
			ViewStateService.UpdateViewState(0);

		base.OnInitialized();
	}

	private void HandleViewModelChange(int selectedIndex)
	{
		ViewStateService.UpdateViewState(selectedIndex);
	}
}

