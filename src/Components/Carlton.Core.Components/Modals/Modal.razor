@namespace Carlton.Core.Components.Modals

<div class="@ModalClass">
    <div class="modal-content">
        @ModalContent(RenderFragmentState)
    </div>
</div>

@code {
    [Parameter]
    public bool IsVisible { get; set; }
    [Parameter]
    public string ModalPrompt { get; set; }
    [Parameter]
    public string ModalMessage { get; set; }
    [Parameter]
    public RenderFragment<ModalRenderFragmentState> ModalContent { get; set; }
    [Parameter]
    public EventCallback<ModalCloseEventArgs> OnClose { get; set; }
    [Parameter]
    public EventCallback OnDismiss { get; set; }

    private ModalRenderFragmentState RenderFragmentState => new ModalRenderFragmentState
        {
            ModalPrompt = ModalPrompt,
            ModalMessage = ModalMessage,
            HandleClose = HandleClose,
            HandleDismiss = HandleDismiss
        };

    private async Task HandleClose(ModalCloseEventArgs args)
    {
        IsVisible = false;
        await OnClose.InvokeAsync(args);
    }

    private async Task HandleDismiss()
    {
        IsVisible = false;
        await OnDismiss.InvokeAsync();
    }

    private string ModalClass
    {
        get => new CssBuilder("modal")
                .AddClass("visible", IsVisible)
                .Build();
    }
}


