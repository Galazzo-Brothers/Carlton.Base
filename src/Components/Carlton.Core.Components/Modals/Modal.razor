@using Carlton.Core.Components.Modals
@namespace Carlton.Core.Components.Modals

@* Represents a flexible modal component that can display different types of modals based on the provided content. *@
<ModalTemplate IsVisible="IsVisible"
               ModalPrompt="@ModalPrompt"
               ModalMessage="@ModalMessage"
               OnClose="CloseModal"
               OnDismiss="DismissModal">
    <ModalContent Context="state">
        @switch (ModalTypes)
        {
            case ModalTypes.SingleActionModal:
                <SingleActionModalContent State="state" />
                break;
            case ModalTypes.ConfirmationModal:
                <ConfirmationModalContent State="state" />
                break;
        }
    </ModalContent>
</ModalTemplate>

@code {
    /// <summary>
    /// Gets or sets a value indicating whether the modal is currently visible.
    /// </summary>
    [Parameter]
    public bool IsVisible { get; set; }
   
    /// <summary>
    /// Gets or sets the type of modal to display.
    /// </summary>
    [Parameter]
    public ModalTypes ModalTypes { get; set; }
   
    /// <summary>
    /// Gets or sets the prompt message displayed in the modal header.
    /// </summary>
    [Parameter]
    public string ModalPrompt { get; set; }

    /// <summary>
    /// Gets or sets the main message displayed in the modal content.
    /// </summary>
    [Parameter]
    public string ModalMessage { get; set; }
   
    /// <summary>
    /// Gets the callback to handle closing the modal and provides event arguments containing modal close information.
    /// </summary>
    [Parameter]
    public EventCallback<ModalCloseEventArgs> CloseModal { get; init; }

    /// <summary>
    /// Gets the callback to handle dismissing the modal without providing additional event arguments.
    /// </summary>
    [Parameter]
    public EventCallback DismissModal { get; init; }
}

