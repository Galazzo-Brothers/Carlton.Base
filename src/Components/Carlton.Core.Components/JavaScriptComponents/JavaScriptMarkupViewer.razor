@namespace Carlton.Core.Components
@implements IAsyncDisposable
@inject IJSRuntime JSRuntime

<div class="javascript-markup-viewer">
    <pre><code class="@Language"></code></pre>
</div>

@code {
    public const string ImportPath = $"./_content/Carlton.Core.Components/JavaScriptComponents/{nameof(JavaScriptMarkupViewer)}.razor.js";
    public const string HighlightCodeBlock = "highlightCodeBlock";
    public const string GetOutputSource = "getOutputSource";
    public const string SetCodeBlock = "setCodeBlock";
    public const string Selector = "pre code";

    private IJSObjectReference _module;

    [Parameter]
    public string Source { get; set; }

    [Parameter]
    public string Language { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _module = await JSRuntime.InvokeAsync<IJSObjectReference>(Constants.Import, ImportPath);
        await base.OnInitializedAsync();
    }

    protected async override Task OnParametersSetAsync()
    {
        await _module.InvokeVoidAsync(SetCodeBlock, Selector, Source);
        await base.OnParametersSetAsync();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if(_module != null)
            await _module.InvokeVoidAsync(JavaScriptMarkupViewer.HighlightCodeBlock, Selector);

        await base.OnAfterRenderAsync(firstRender);
    }

    public async ValueTask DisposeAsync()
    {
        await _module.DisposeAsync();
    }
}