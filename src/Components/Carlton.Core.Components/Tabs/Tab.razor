@namespace Carlton.Core.Components.Tabs

@if (IsActive)
{
    @ChildContent
}

@code {
    [CascadingParameter]
    private TabBarBase Parent { get; set; }

    /// <summary>
    /// Gets or sets the text to be displayed on the tab.
    /// </summary>
    [Parameter]
    public string DisplayText { get; set; }

    /// <summary>
    /// Gets or sets the icon to be displayed on the tab.
    /// </summary>
    [Parameter]
    public string Icon { get; set; }

    /// <summary>
    /// Gets or sets the content of the tab. This can include any Razor markup or components.
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Gets a boolean value indicating whether the tab is currently active.
    /// </summary>
    public bool IsActive { get => Parent.ActiveTabIndex == TabIndex; }

    /// <summary>
    /// Gets or sets the index of the tab within the tab bar.
    /// This value is set internally by the TabBar when the tab is added.
    /// </summary>
    public int TabIndex { get; internal set; }

    protected override void OnInitialized()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "Tab must exist within a TabBar");

        base.OnInitialized();
        Parent.AddTab(this);
    }
} 