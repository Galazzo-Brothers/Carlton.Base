@using System.Threading
@using Microsoft.JSInterop
@using Carlton.Core.Components.Layouts.State.Viewport
@namespace Carlton.Core.Components.Layouts.MediaQuery
@implements IDisposable
@inject IViewportState ViewPortState

<div class="media-query-wrapper">
    @if (CurrentViewport == null)
    {
        //do nothing on prerender
    }
    else if (CurrentViewport.IsMoible)
    {
        <div class="mobile">
            @MobileContent
        </div>
    }
    else
    {
        <div class="desktop">
            @DesktopContent
        </div>
    }
</div>

@code {
    [Parameter]
    public RenderFragment MobileContent { get; set; }

    [Parameter]
    public RenderFragment DesktopContent { get; set; }

    private ViewportModel CurrentViewport { get; set; }

    protected async override Task OnInitializedAsync()
    {
        CurrentViewport = await ViewPortState.GetCurrentViewport();
        ViewPortState.ViewportChanged += OnViewportChanged;
        await base.OnInitializedAsync();
    }

    private void OnViewportChanged(object? sender, ViewportChangedEventArgs args)
    {
        CurrentViewport = args.NewViewport;
        StateHasChanged();
    }

    public void Dispose()
        => ViewPortState.ViewportChanged -= OnViewportChanged;
}
