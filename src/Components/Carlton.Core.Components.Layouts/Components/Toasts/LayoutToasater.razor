@using Carlton.Core.Components.Toasts
@namespace Carlton.Core.Components.Layouts.Toasts

<div class="layout-toaster">
    <div class="content" style="@ContentStyle">
        @foreach(var vm in Toasts)
        {
            <Toast ViewModel="@vm" />
        }
    </div>
</div>

@if(IsTestMode)
{
    <div class="test-btns">
        <button class="success-btn" @onclick="@(() => GenerateNotification("Test", "Test", ToastTypes.Success))">Success</button>
        <button class="info-btn" @onclick="@(() => GenerateNotification("Test", "Test", ToastTypes.Info))">Info</button>
        <button class="warning-btn" @onclick="@(() => GenerateNotification("Test", "Test", ToastTypes.Warning))">Warning</button>
        <button class="error-btn" @onclick="@(() => GenerateNotification("Test", "Test", ToastTypes.Error))">Error</button>
    </div>
}

@code {
    [Parameter]
    public bool IsTestMode { get; set; }
    [Parameter]
    public bool FadeOutEnabled { get; set; }
    [Parameter]
    public int Top { get; set; }
    [Parameter]
    public int Right { get; set; }

    private int ToastIndex { get; set; }

    private List<ToastViewModel> Toasts { get; } = new List<ToastViewModel>();

    public void GenerateNotification(string title, string message, ToastTypes toastType)
    {
        Toasts.Add(new ToastViewModel
            {
                Title = title,
                Message = message,
                ToastType = toastType,
                FadeOutEnabled = FadeOutEnabled,
                ToastIndex = ToastIndex
            });

            ToastIndex++;
    }

    private string ContentStyle
    {
        get => new StyleBuilder()
                .AddStyle("--toast-top", $"{Top}px")
                .AddStyle("--toast-right", $"{Right}px")
                .Build();
    }
}

