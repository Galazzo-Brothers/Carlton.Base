@namespace Carlton.Base.TestBed
@inherits CarltonComponentBase<ModelViewerViewModel>

<div class="view-model-viewer">
    <div class="form-group">
        <Console Text="@ViewModelJson"
                 IsReadOnly="false"
                 IsValid="@IsValid"
                 OnChangeCallback="(str) => OnViewModelChanged(str)" />
    </div>
</div>


@code {
    private bool IsValid { get; set; } = true;
    private string ViewModelJson { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        IsValid = true;
        ViewModelJson =  JsonSerializer.Serialize(ViewModel.ComponentParameters.ParameterObj, new JsonSerializerOptions { WriteIndented = true });
        base.OnParametersSet();
    }

    private async Task OnViewModelChanged(string vmStr)
    {
        try
        {
            var type = ViewModel.ComponentParameters.ParameterObj.GetType();
            var deserializedViewModel = JsonSerializer.Deserialize(vmStr, type);
            IsValid = true;
            await base.OnComponentEvent.InvokeAsync(new ModelChanged(deserializedViewModel));
        }
        catch(Exception)
        {
            IsValid = false;
        }
    }
}
