@namespace Carlton.Core.Components.Flux.Debug
@using Carlton.Core.Components.Flux.Contracts
@inject NavigationManager NavigationManager
@inject IBrowserStorageService BrowserStorageService

<div class="flux-debug-header-actions">
    <ThemeMenu />
    <Notifications />
    <ProfileAvatar Username="Stephen"
                   AvatarImgUrl="_content/Carlton.Core.Components.Library/images/avatar.jpg"
                   DropdownMenuItems="DropdownMenuItems"
                   MenuItemSelected="HandleMenuItemSelected" />
</div>



<Modal ModalVisible="ShowModal" 
       ModalPrompt="Are you sure?"
       ModalMessage="Do you really want to delete this records? It cannot be undone."
       OnModalDissmissed="OnModalDismised" />




@code {
    [CascadingParameter]
    private ThemeState ThemeState { get; set; }

    private bool ShowModal { get; set; }

    private IEnumerable<DropdownMenuItem<int>> DropdownMenuItems
    {
        get
        {
            return new List<DropdownMenuItem<int>>
            {
                new DropdownMenuItem<int>("Profile", 1, "account", 1),
                new DropdownMenuItem<int>("Theme", 2, "theme-light-dark", 2),
                new DropdownMenuItem<int>("Clear Localstorage", 3, "delete", 3),
                new DropdownMenuItem<int>("App", 4, "open-in-app", 4),
                new DropdownMenuItem<int>("Logout", 5, "logout", 5)
            };
        }
    }

    private void HandleMenuItemSelected(int selectedIndex)
    {
        switch (selectedIndex)
        {
            case 2:
                ThemeState.SetTheme(ThemeState.Theme == Themes.light ? Themes.dark : Themes.light);
                break;
            case 3:
                ShowModal = true;
                break;
            case 4:
                NavigationManager.NavigateTo($"/");
                break;
            default:
                return;
        }
    }

    private async Task OnModalDismised(bool userConfirmed)
    {
        if (userConfirmed)
            await BrowserStorageService.ClearLogs();

        ShowModal = false;
    }
}