#pragma checksum "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "18a6b60a6a8ebfc4729de13dfe286242025f594a"
// <auto-generated/>
#pragma warning disable 1591
namespace Carlton.Base.Client.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\_imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
    public partial class Tree<TNode> : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "tree" + " " + (
#nullable restore
#line 4 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                   Visible ? "" : "d-none"

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(2, "b-gjo1a3b2vr");
#nullable restore
#line 5 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
     foreach(var node in Nodes ?? Enumerable.Empty<TreeItem<TNode>>())
    {
        var nodeExpanded = ExpandedNodes.Contains(node);
        var nodeSelected = node.Equals(SelectedNode);
        var hasChildren = node.Children.Any();


#line default
#line hidden
#nullable disable
            __builder.OpenElement(3, "div");
            __builder.AddAttribute(4, "class", "row");
            __builder.AddAttribute(5, "b-gjo1a3b2vr");
            __builder.OpenElement(6, "span");
            __builder.AddAttribute(7, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 12 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                               e => OnToggleNode(node, !nodeExpanded)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(8, "b-gjo1a3b2vr");
            __builder.OpenElement(9, "i");
            __builder.AddAttribute(10, "class", "icon" + " " + (
#nullable restore
#line 13 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                 hasChildren ? "": "invisible"

#line default
#line hidden
#nullable disable
            ) + " " + (
#nullable restore
#line 13 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                                                  nodeExpanded ? Style.CollapseNodeIconClass : Style.ExpandNodeIconClass

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(11, "b-gjo1a3b2vr");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\r\n            ");
            __builder.OpenElement(13, "span");
            __builder.AddAttribute(14, "class", "title" + " " + (
#nullable restore
#line 15 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                Style.NodeTitleClass

#line default
#line hidden
#nullable disable
            ) + " " + (
#nullable restore
#line 15 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                                       nodeSelected ? Style.NodeTitleSelectedClass : ""

#line default
#line hidden
#nullable disable
            ) + " align-middle");
            __builder.AddAttribute(15, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 15 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                                                                                                                   e => OnSelectNode(node)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(16, "b-gjo1a3b2vr");
            __builder.AddContent(17, 
#nullable restore
#line 16 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                 TitleTemplate(node)

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 19 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
         if(hasChildren)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<Carlton.Base.Client.Components.Tree<TNode>>(18);
            __builder.AddAttribute(19, "Nodes", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.Generic.IEnumerable<Carlton.Base.Client.Components.TreeItem<TNode>>>(
#nullable restore
#line 22 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                         node.Children

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(20, "TitleTemplate", new Microsoft.AspNetCore.Components.RenderFragment<Carlton.Base.Client.Components.TreeItem<TNode>>(
#nullable restore
#line 23 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                 TitleTemplate

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(21, "ExpandedNodes", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Collections.Generic.IList<Carlton.Base.Client.Components.TreeItem<TNode>>>(
#nullable restore
#line 24 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                 ExpandedNodes

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(22, "ExpandedNodesChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IList<Carlton.Base.Client.Components.TreeItem<TNode>>>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Collections.Generic.IList<Carlton.Base.Client.Components.TreeItem<TNode>>>(this, 
#nullable restore
#line 25 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                        ExpandedNodesChanged

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(23, "SelectedNode", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Carlton.Base.Client.Components.TreeItem<TNode>>(
#nullable restore
#line 26 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                SelectedNode

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(24, "SelectedNodeChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Carlton.Base.Client.Components.TreeItem<TNode>>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Carlton.Base.Client.Components.TreeItem<TNode>>(this, 
#nullable restore
#line 27 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                                       SelectedNodeChanged

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(25, "Visible", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 28 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
                           nodeExpanded

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
#nullable restore
#line 29 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
         
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 33 "C:\Users\nicho\Documents\code\Project Carlton\libs\Carlton.Base.Client.Components\Tree\Tree.razor"
       
    [Parameter]
    public IEnumerable<TreeItem<TNode>> Nodes { get; set; } = Enumerable.Empty<TreeItem<TNode>>();

    [Parameter]
    public RenderFragment<TreeItem<TNode>> TitleTemplate { get; set; }

    [Parameter]
    public TreeItem<TNode> SelectedNode { get; set; }

    [Parameter]
    public EventCallback<TreeItem<TNode>> SelectedNodeChanged { get; set; }

    [Parameter]
    public IList<TreeItem<TNode>> ExpandedNodes { get; set; } = new List<TreeItem<TNode>>();

    [Parameter]
    public EventCallback<IList<TreeItem<TNode>>> ExpandedNodesChanged { get; set; }

    [Parameter]
    public TreeStyle Style { get; set; } = TreeStyle.DefaultTreeStyle;

    [Parameter]
    public bool Visible { get; set; } = true;

    private void OnToggleNode(TreeItem<TNode> node, bool expand)
    {
        var expanded = ExpandedNodes.Contains(node);

        if(expanded && !expand)
        {
            ExpandedNodes.Remove(node);
            ExpandedNodesChanged.InvokeAsync(ExpandedNodes);
        }
        else if(!expanded && expand)
        {
            ExpandedNodes.Add(node);
            ExpandedNodesChanged.InvokeAsync(ExpandedNodes);
        }
    }

    private void OnSelectNode(TreeItem<TNode> node)
    {
        if(node.Children.Any())
        {
            OnToggleNode(node, !ExpandedNodes.Contains(node));
        }
        else
        {
            SelectedNode = node;
            SelectedNodeChanged.InvokeAsync(node);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
